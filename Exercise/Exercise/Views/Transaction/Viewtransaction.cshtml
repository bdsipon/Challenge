@model IEnumerable<Exercise.Models.TransactionList>

@using System.Data
@{
    ViewBag.Title = "Viewtransaction";
}

<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")"></script>
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>

<h2>Viewtransaction</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
   <div class="form-horizontal">
       
       <table>
           <tr>
               <td></td>
           </tr>
           <tr>
               <td>
                   Account Number
                   <br />
                   @Html.TextBox("accountNumber", null, new { @class = "form-control form-admin", @ID = "textAccountBalance" })
               </td>
           </tr>
           <tr>

               <td style="padding:10px 10px 10px 226px;">
                   <input type="submit" value="View" class="btn" />
               </td>
           </tr>

           @if (ViewBag.ShowList)
           {
               <tr>
                   <td style="float:right">
                       @Html.ActionLink("Add New Transaction", "AddTransaction", new { accno = ViewBag.AccountNumber }, null)
                   </td>
               </tr>
               <br />
               <tr>
                   <td>
                       Account Number : @ViewBag.AccountNumber
                   </td>
               </tr>
               <tr>
                   <td>
                       Total Balance : @ViewBag.TotalBalance
                   </td>
               </tr>
               <tr>
                   <td>
                       <div class="row">
                           <div class="col-12">
                               <div class="card-box table-responsive">
                                   <h4 class="m-t-0 header-title"><center>Transaction Report</center></h4>
                                   <table class="table table-striped table-bordered">
                                       <tr>
                                           <th scope="col"><b>Account Number</b></th>
                                           <th scope="col"><b>Transction Type</b></th>
                                           <th scope="col"><b>Amount</b></th>
                                           <th scope="col"><b>Balance</b></th>
                                           <th scope="col"><b>Description</b></th>
                                           <th scope="col"><b>Transaction Date</b></th>

                                       </tr>
                                       @foreach (Exercise.Models.TransactionList row in Model)
                                       {
                                           <tr>

                                               <td align="center">@row.accountNumber</td>
                                               <td align="center">@row.transactionType</td>
                                               <td align="center">@row.amount</td>
                                               <td align="center">@row.balance</td>
                                               <td align="center">@row.description</td>
                                               <td align="center">@row.tranaction_date</td>


                                           </tr>
                                       }
                                   </table>

                                   @*@grid.GetHtml(
                                htmlAttributes: new { @id = "datatable-buttons", @class = "table table-striped table-bordered" },
                                columns: new[]{ grid.Column("accountno", "Account Number",canSort:false),
                                            grid.Column("type", "Transction Type",canSort:false),
                                            grid.Column("amount", "Amount",canSort:false),
                                            grid.Column("balance", "Balance",canSort:false),
                                            grid.Column("description", "Description",canSort:false),
                                            grid.Column("transaction_date", "Transaction Date",canSort:false) })*@

                                   <div class="code-cut">
                                       @*@Html.Grid(Model).Columns(columns =>
                                    {
                                        columns.Add(c => c.accountno).Titled("Account Number").Filterable(true);
                                        columns.Add(c => c.type).Titled("Transction Type").Filterable(true);
                                        columns.Add(c => c.amount).Titled("Amount").Filterable(true);
                                        columns.Add(c => c.balance).Titled("Balance").Filterable(true);
                                        columns.Add(c => c.description).Titled("Description").Filterable(true);
                                        columns.Add(c => c.transaction_date).Titled("Transaction Date").Filterable(true);

                                        columns.Add()
                                        .Encoded(false)
                                        .Sanitized(false)
                                        .SetWidth(30);
                                        }).WithPaging(10).Sortable(true)*@
                                   </div>

                               </div>
                           </div>
                       </div>
                   </td>
               </tr>
           }
       </table>
   @*  *@
   
   </div>

}